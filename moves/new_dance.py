# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.162604, [3, -0.16, 0], [3, 0.266667, 0]], [-0.640536, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.333904, [3, -0.253333, 0], [3, 0.2, 0]], [-0.341387, [3, -0.2, 0], [3, 0.2, 0]], [-0.0079806, [3, -0.2, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.00234838, [3, -0.16, 0], [3, 0.266667, 0]], [1.50447, [3, -0.266667, -0.00402978], [3, 0.253333, 0.00382829]], [1.5083, [3, -0.253333, 0], [3, 0.2, 0]], [1.50447, [3, -0.2, 0.00382829], [3, 0.2, -0.00382829]], [0.00234837, [3, -0.2, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.0886735, [3, -0.16, 0], [3, 0.266667, 0]], [-0.20944, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.20944, [3, -0.253333, 0], [3, 0.2, 0]], [-0.218846, [3, -0.2, 0.00940618], [3, 0.2, -0.00940618]], [-0.34424, [3, -0.2, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.123915, [3, -0.16, 0], [3, 0.266667, 0]], [0.0942478, [3, -0.266667, -0.0447515], [3, 0.253333, 0.042514]], [0.137881, [3, -0.253333, 0], [3, 0.2, 0]], [0.137881, [3, -0.2, 0], [3, 0.2, 0]], [0.00328318, [3, -0.2, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.413747, [3, -0.16, 0], [3, 0.266667, 0]], [-0.417419, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.395736, [3, -0.253333, 0], [3, 0.2, 0]], [-0.401813, [3, -0.2, 0.00607663], [3, 0.2, -0.00607663]], [-1.0061, [3, -0.2, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-1.19853, [3, -0.16, 0], [3, 0.266667, 0]], [-1.19333, [3, -0.266667, -0.00310959], [3, 0.253333, 0.00295411]], [-1.18034, [3, -0.253333, 0], [3, 0.2, 0]], [-1.19003, [3, -0.2, 0.0096967], [3, 0.2, -0.0096967]], [-1.38024, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.290141, [3, -0.16, 0], [3, 0.266667, 0]], [0.293885, [3, -0.266667, 0], [3, 0.253333, 0]], [0.293885, [3, -0.253333, 0], [3, 0.2, 0]], [0.287666, [3, -0.2, 0.00568669], [3, 0.2, -0.00568669]], [0.259765, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.128245, [3, -0.16, 0], [3, 0.266667, 0]], [-0.0715585, [3, -0.266667, 0.0595139], [3, 0.253333, -0.0565382]], [-0.219911, [3, -0.253333, 0], [3, 0.2, 0]], [-0.219911, [3, -0.2, 0], [3, 0.2, 0]], [-0.444521, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.0996971, [3, -0.16, 0], [3, 0.266667, 0]], [0.00964819, [3, -0.266667, 0], [3, 0.253333, 0]], [0.544543, [3, -0.253333, 0], [3, 0.2, 0]], [0.544543, [3, -0.2, 0], [3, 0.2, 0]], [0.000849991, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.162195, [3, -0.16, 0], [3, 0.266667, 0]], [0.730519, [3, -0.266667, 0], [3, 0.253333, 0]], [0.616101, [3, -0.253333, 0], [3, 0.2, 0]], [0.616101, [3, -0.2, 0], [3, 0.2, 0]], [0.000961689, [3, -0.2, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.0876097, [3, -0.16, 0], [3, 0.266667, 0]], [-0.0800728, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.0925025, [3, -0.253333, 0], [3, 0.2, 0]], [-0.0923279, [3, -0.2, -0.000174537], [3, 0.2, 0.000174537]], [0.69245, [3, -0.2, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[1.47234, [3, -0.16, 0], [3, 0.266667, 0]], [-1.42593, [3, -0.266667, 0], [3, 0.253333, 0]], [-1.42359, [3, -0.253333, -0.00175763], [3, 0.2, 0.0013876]], [-1.4165, [3, -0.2, -0.00708867], [3, 0.2, 0.00708867]], [1.39208, [3, -0.2, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.184089, [3, -0.16, 0], [3, 0.266667, 0]], [0.193173, [3, -0.266667, 0], [3, 0.253333, 0]], [0.123687, [3, -0.253333, 0], [3, 0.2, 0]], [0.126847, [3, -0.2, -0.00316082], [3, 0.2, 0.00316082]], [0.297493, [3, -0.2, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.0968379, [3, -0.16, 0], [3, 0.266667, 0]], [0.0985198, [3, -0.266667, 0], [3, 0.253333, 0]], [0.0985198, [3, -0.253333, 0], [3, 0.2, 0]], [0.0901013, [3, -0.2, 0.00841853], [3, 0.2, -0.00841853]], [0.00130432, [3, -0.2, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.0886619, [3, -0.16, 0], [3, 0.266667, 0]], [0.9227, [3, -0.266667, 0], [3, 0.253333, 0]], [0.9227, [3, -0.253333, 0], [3, 0.2, 0]], [0.9227, [3, -0.2, 3.32895e-07], [3, 0.2, -3.32895e-07]], [-0.348013, [3, -0.2, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.124065, [3, -0.16, 0], [3, 0.266667, 0]], [7.45058e-09, [3, -0.266667, 0], [3, 0.253333, 0]], [7.45058e-09, [3, -0.253333, 0], [3, 0.2, 0]], [7.45058e-09, [3, -0.2, 0], [3, 0.2, 0]], [7.45058e-09, [3, -0.2, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.413748, [3, -0.16, 0], [3, 0.266667, 0]], [0.406807, [3, -0.266667, 0.0032207], [3, 0.253333, -0.00305966]], [0.394907, [3, -0.253333, 0.000657421], [3, 0.2, -0.000519017]], [0.394388, [3, -0.2, 0], [3, 0.2, 0]], [1.00605, [3, -0.2, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[1.19862, [3, -0.16, 0], [3, 0.266667, 0]], [1.19332, [3, -0.266667, 0.00257455], [3, 0.253333, -0.00244582]], [1.18356, [3, -0.253333, 0], [3, 0.2, 0]], [1.18432, [3, -0.2, -0.000757803], [3, 0.2, 0.000757803]], [1.38702, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.290139, [3, -0.16, 0], [3, 0.266667, 0]], [0.293853, [3, -0.266667, 0], [3, 0.253333, 0]], [0.293853, [3, -0.253333, 0], [3, 0.2, 0]], [0.287639, [3, -0.2, 0.00568239], [3, 0.2, -0.00568239]], [0.259758, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.128255, [3, -0.16, 0], [3, 0.266667, 0]], [0.483456, [3, -0.266667, 0], [3, 0.253333, 0]], [0.483456, [3, -0.253333, 0], [3, 0.2, 0]], [0.483456, [3, -0.2, 0], [3, 0.2, 0]], [-0.441105, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.0997211, [3, -0.16, 0], [3, 0.266667, 0]], [-0.0934616, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.0934616, [3, -0.253333, 0], [3, 0.2, 0]], [-0.0872071, [3, -0.2, -0.00625446], [3, 0.2, 0.00625446]], [-0.00868798, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.162195, [3, -0.16, 0], [3, 0.266667, 0]], [0.730519, [3, -0.266667, 0], [3, 0.253333, 0]], [0.730519, [3, -0.253333, 0], [3, 0.2, 0]], [0.616101, [3, -0.2, 0.114418], [3, 0.2, -0.114418]], [0.000961689, [3, -0.2, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.0876097, [3, -0.16, 0], [3, 0.266667, 0]], [-0.0904766, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.0904766, [3, -0.253333, 0], [3, 0.2, 0]], [-0.0904766, [3, -0.2, 0], [3, 0.2, 0]], [0.692467, [3, -0.2, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[1.46238, [3, -0.16, 0], [3, 0.266667, 0]], [-1.06465, [3, -0.266667, 0], [3, 0.253333, 0]], [-1.05667, [3, -0.253333, -0.00266687], [3, 0.2, 0.00210542]], [-1.05033, [3, -0.2, -0.00633812], [3, 0.2, 0.00633812]], [1.39697, [3, -0.2, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[-0.183688, [3, -0.16, 0], [3, 0.266667, 0]], [-0.193036, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.133844, [3, -0.253333, 0], [3, 0.2, 0]], [-0.154231, [3, -0.2, 0.0203866], [3, 0.2, -0.0203866]], [-0.292888, [3, -0.2, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.48, 1.28, 2.04, 2.64, 3.24])
keys.append([[0.0968379, [3, -0.16, 0], [3, 0.266667, 0]], [0.0986067, [3, -0.266667, 0], [3, 0.253333, 0]], [0.0986067, [3, -0.253333, 0], [3, 0.2, 0]], [0.0901808, [3, -0.2, 0.00842592], [3, 0.2, -0.00842592]], [0.00130547, [3, -0.2, 0], [3, 0, 0]]])


def main(IP, port):
  try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    motion = ALProxy("ALMotion", IP, port)
    #motion = ALProxy("ALMotion")
    motion.angleInterpolationBezier(names, times, keys)
  except BaseException, err:
    print err
